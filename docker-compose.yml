# docker-compose.yml

services:
  ollama:
    # Use your custom Dockerfile to build the Ollama service
    build:
      context: ./ollama_server
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ollama_models:/root/.ollama/models
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s # Good for initial model download, can be reduced later
    deploy: # for laptop nvidia GPU support if not available comment out
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      my_bridge_network: # Assign to the custom network

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "1883:1883" # Standard MQTT port
      - "9001:9001" # WebSocket port (optional, for web clients)
    volumes:
      - ./mosquitto_config:/mosquitto/config
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    command: mosquitto -c /mosquitto/config/mosquitto.conf
    user: "0" # <--- ADD THIS LINE FOR TESTING PERMISSIONS
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_sub -t '$$SYS/broker/version' -C 1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      my_bridge_network:
        ipv4_address: 172.20.0.10 # Assign a static IP address for Mosquitto

  mcp_server:
    build:
      context: ./mcp_server
      dockerfile: Dockerfile.mcp
    container_name: mcp_server
    ports:
      - "4000:4000"
    # IMPORTANT: Only uncomment this if your MCP server actually makes calls to Ollama.
    # Otherwise, it unnecessarily delays MCP server startup.
    depends_on:
      ollama:
        condition: service_healthy
    restart: unless-stopped
    networks:
      my_bridge_network: # Assign to the custom network

  adk_app:
    build:
      context: ./adk_ollama_tool
      dockerfile: Dockerfile.adk
    container_name: adk_app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      OLLAMA_BASE_URL: http://ollama:11434
      MCP_SERVER_URL: http://mcp_server:4000
      OPENWEATHER_API_KEY: ${OPENWEATHER_API_KEY} # Ensure this is set in your .env file
      MQTT_BROKER_HOST: 172.20.0.10 # Now use the fixed IP address
      MQTT_BROKER_PORT: 1883
      PYTHONUNBUFFERED: 1
    depends_on:
      ollama:
        condition: service_healthy
      mosquitto:
        condition: service_healthy
      mcp_server:
        condition: service_started
    restart: unless-stopped
    networks:
      my_bridge_network: # Assign to the custom network

volumes:
  ollama_data:
  ollama_models:
  mosquitto_data:
  mosquitto_logs:

# Define your custom network
networks:
  my_bridge_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24 # Define the subnet for your custom network
          gateway: 172.20.0.1 # Optional: Define a gateway for the subnet (Docker usually handles this automatically)