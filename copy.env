# .env (in mcp_server directory)

# Your Google Home Action's internal authentication token
# This is used for Google to authenticate to your /google_home/fulfillment endpoint
GOOGLE_HOME_AUTH_TOKEN="your_strong_secret_token_here_for_google_home"

# OpenWeatherMap API Key
OPENWEATHER_API_KEY="your_openweathermap_api_key"

# Base URL for the adk_app service (when running in Docker Compose)
ADK_APP_URL="http://adk_app:8000"

# Secret key for session management (used by FastAPI and JWT token signing)
SECRET_KEY="your_long_random_secret_key_for_sessions_and_jwt"

# OAuth Server Configuration (for simple_oauth_server.py)
# These should match your Google Cloud Project's OAuth Client ID and Secret
# (The same ones you put in Google Actions Console)
GOOGLE_CLIENT_ID="your_google_cloud_client_id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your_google_cloud_client_secret"

# This REDIRECT_URI is used internally by simple_oauth_server.py for validation.
# For now, it should match the main redirect URI Google uses, or a specific one you define.
# For Google Home's OAuth linking, the 'redirect_uri' will be passed by Google,
# so this variable in simple_oauth_server.py will need to match what Google sends.
# For simplified testing, use the Google OAuth redirect URI.
# We'll use this for internal validation in simple_oauth_server.py.
GOOGLE_REDIRECT_URI="https://oauth-redirect.googleusercontent.com/r/mysmarthomeadkproject"
# Make sure to replace 'mysmarthomeadkproject' with your actual Project ID.

# Dummy authorization code for simple_oauth_server.py (for testing)
# In a real app, this would be dynamically generated.
AUTH_CODE="your_dummy_auth_code_for_testing"